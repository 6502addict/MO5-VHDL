// megafunction wizard: %RAM: 2-PORT%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: altsyncram 

// ============================================================
// File Name: shape.v
// Megafunction Name(s):
// 			altsyncram
//
// Simulation Library Files(s):
// 			altera_mf
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 13.0.1 Build 232 06/12/2013 SP 1 SJ Web Edition
// ************************************************************


//Copyright (C) 1991-2013 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//altsyncram ADDRESS_REG_B="CLOCK1" CLOCK_ENABLE_INPUT_A="BYPASS" CLOCK_ENABLE_INPUT_B="BYPASS" CLOCK_ENABLE_OUTPUT_A="BYPASS" CLOCK_ENABLE_OUTPUT_B="BYPASS" DEVICE_FAMILY="Cyclone II" NUMWORDS_A=8192 NUMWORDS_B=8192 OPERATION_MODE="DUAL_PORT" OUTDATA_ACLR_B="NONE" OUTDATA_REG_B="UNREGISTERED" POWER_UP_UNINITIALIZED="FALSE" RAM_BLOCK_TYPE="M4K" WIDTH_A=8 WIDTH_B=8 WIDTH_BYTEENA_A=1 WIDTHAD_A=13 WIDTHAD_B=13 address_a address_b clock0 clock1 data_a q_b wren_a
//VERSION_BEGIN 13.0 cbx_altsyncram 2013:06:12:18:03:43:SJ cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_lpm_mux 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ cbx_stratixiii 2013:06:12:18:03:43:SJ cbx_stratixv 2013:06:12:18:03:43:SJ cbx_util_mgl 2013:06:12:18:03:43:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//altsyncram ADDRESS_REG_B="CLOCK1" CLOCK_ENABLE_INPUT_A="BYPASS" CLOCK_ENABLE_INPUT_B="BYPASS" CYCLONEII_SAFE_WRITE="NO_CHANGE" DEVICE_FAMILY="Cyclone II" NUMWORDS_A=8192 NUMWORDS_B=8192 OPERATION_MODE="BIDIR_DUAL_PORT" POWER_UP_UNINITIALIZED="FALSE" RAM_BLOCK_TYPE="M4K" WIDTH_A=8 WIDTH_B=8 WIDTH_BYTEENA_A=1 WIDTH_BYTEENA_B=1 WIDTHAD_A=13 WIDTHAD_B=13 WRCONTROL_WRADDRESS_REG_B="CLOCK1" address_a address_b clock0 clock1 clocken1 data_a data_b q_a wren_a wren_b
//VERSION_BEGIN 13.0 cbx_altsyncram 2013:06:12:18:03:43:SJ cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_lpm_mux 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ cbx_stratixiii 2013:06:12:18:03:43:SJ cbx_stratixv 2013:06:12:18:03:43:SJ cbx_util_mgl 2013:06:12:18:03:43:SJ  VERSION_END


//lpm_decode DEVICE_FAMILY="Cyclone II" LPM_DECODES=2 LPM_WIDTH=1 data enable eq
//VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END

//synthesis_resources = lut 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  shape_decode
	( 
	data,
	enable,
	eq) /* synthesis synthesis_clearbox=1 */;
	input   [0:0]  data;
	input   enable;
	output   [1:0]  eq;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [0:0]  data;
	tri1   enable;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [1:0]  eq_node;

	assign
		eq = eq_node,
		eq_node = {(data & enable), ((~ data) & enable)};
endmodule //shape_decode


//lpm_mux DEVICE_FAMILY="Cyclone II" LPM_SIZE=2 LPM_WIDTH=8 LPM_WIDTHS=1 data result sel
//VERSION_BEGIN 13.0 cbx_lpm_mux 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ  VERSION_END

//synthesis_resources = lut 8 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  shape_mux
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [15:0]  data;
	output   [7:0]  result;
	input   [0:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [15:0]  data;
	tri0   [0:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [7:0]  result_node;
	wire  [0:0]  sel_node;
	wire  [1:0]  w_data234w;
	wire  [1:0]  w_data248w;
	wire  [1:0]  w_data260w;
	wire  [1:0]  w_data272w;
	wire  [1:0]  w_data284w;
	wire  [1:0]  w_data296w;
	wire  [1:0]  w_data308w;
	wire  [1:0]  w_data320w;

	assign
		result = result_node,
		result_node = {((sel_node & w_data320w[1]) | ((~ sel_node) & w_data320w[0])), ((sel_node & w_data308w[1]) | ((~ sel_node) & w_data308w[0])), ((sel_node & w_data296w[1]) | ((~ sel_node) & w_data296w[0])), ((sel_node & w_data284w[1]) | ((~ sel_node) & w_data284w[0])), ((sel_node & w_data272w[1]) | ((~ sel_node) & w_data272w[0])), ((sel_node & w_data260w[1]) | ((~ sel_node) & w_data260w[0])), ((sel_node & w_data248w[1]) | ((~ sel_node) & w_data248w[0])), ((sel_node & w_data234w[1]) | ((~ sel_node) & w_data234w[0]))},
		sel_node = {sel[0]},
		w_data234w = {data[8], data[0]},
		w_data248w = {data[9], data[1]},
		w_data260w = {data[10], data[2]},
		w_data272w = {data[11], data[3]},
		w_data284w = {data[12], data[4]},
		w_data296w = {data[13], data[5]},
		w_data308w = {data[14], data[6]},
		w_data320w = {data[15], data[7]};
endmodule //shape_mux

//synthesis_resources = lut 20 M4K 16 reg 2 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"OPTIMIZE_POWER_DURING_SYNTHESIS=NORMAL_COMPILATION"} *)
module  shape_altsyncram1
	( 
	address_a,
	address_b,
	clock0,
	clock1,
	clocken1,
	data_a,
	data_b,
	q_a,
	q_b,
	wren_a,
	wren_b) /* synthesis synthesis_clearbox=1 */;
	input   [12:0]  address_a;
	input   [12:0]  address_b;
	input   clock0;
	input   clock1;
	input   clocken1;
	input   [7:0]  data_a;
	input   [7:0]  data_b;
	output   [7:0]  q_a;
	output   [7:0]  q_b;
	input   wren_a;
	input   wren_b;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   [12:0]  address_b;
	tri1   clock0;
	tri1   clock1;
	tri1   clocken1;
	tri1   [7:0]  data_a;
	tri1   [7:0]  data_b;
	tri0   wren_a;
	tri0   wren_b;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[0:0]	address_reg_a;
	reg	[0:0]	address_reg_b;
	wire  [1:0]   wire_decode3_eq;
	wire  [1:0]   wire_decode4_eq;
	wire  [1:0]   wire_decode_a_eq;
	wire  [1:0]   wire_decode_b_eq;
	wire  [7:0]   wire_mux5_result;
	wire  [7:0]   wire_mux6_result;
	wire  [0:0]   wire_ram_block2a_0portadataout;
	wire  [0:0]   wire_ram_block2a_1portadataout;
	wire  [0:0]   wire_ram_block2a_2portadataout;
	wire  [0:0]   wire_ram_block2a_3portadataout;
	wire  [0:0]   wire_ram_block2a_4portadataout;
	wire  [0:0]   wire_ram_block2a_5portadataout;
	wire  [0:0]   wire_ram_block2a_6portadataout;
	wire  [0:0]   wire_ram_block2a_7portadataout;
	wire  [0:0]   wire_ram_block2a_8portadataout;
	wire  [0:0]   wire_ram_block2a_9portadataout;
	wire  [0:0]   wire_ram_block2a_10portadataout;
	wire  [0:0]   wire_ram_block2a_11portadataout;
	wire  [0:0]   wire_ram_block2a_12portadataout;
	wire  [0:0]   wire_ram_block2a_13portadataout;
	wire  [0:0]   wire_ram_block2a_14portadataout;
	wire  [0:0]   wire_ram_block2a_15portadataout;
	wire  [0:0]   wire_ram_block2a_0portbdataout;
	wire  [0:0]   wire_ram_block2a_1portbdataout;
	wire  [0:0]   wire_ram_block2a_2portbdataout;
	wire  [0:0]   wire_ram_block2a_3portbdataout;
	wire  [0:0]   wire_ram_block2a_4portbdataout;
	wire  [0:0]   wire_ram_block2a_5portbdataout;
	wire  [0:0]   wire_ram_block2a_6portbdataout;
	wire  [0:0]   wire_ram_block2a_7portbdataout;
	wire  [0:0]   wire_ram_block2a_8portbdataout;
	wire  [0:0]   wire_ram_block2a_9portbdataout;
	wire  [0:0]   wire_ram_block2a_10portbdataout;
	wire  [0:0]   wire_ram_block2a_11portbdataout;
	wire  [0:0]   wire_ram_block2a_12portbdataout;
	wire  [0:0]   wire_ram_block2a_13portbdataout;
	wire  [0:0]   wire_ram_block2a_14portbdataout;
	wire  [0:0]   wire_ram_block2a_15portbdataout;
	wire  [0:0]  address_a_sel;
	wire  [12:0]  address_a_wire;
	wire  [0:0]  address_b_sel;
	wire  [12:0]  address_b_wire;

	// synopsys translate_off
	initial
		address_reg_a = 0;
	// synopsys translate_on
	always @ ( posedge clock0)
		  address_reg_a <= address_a_sel;
	// synopsys translate_off
	initial
		address_reg_b = 0;
	// synopsys translate_on
	always @ ( posedge clock1)
		  address_reg_b <= address_b_sel;
	shape_decode   decode3
	( 
	.data(address_a_wire[12]),
	.enable(wren_a),
	.eq(wire_decode3_eq));
	shape_decode   decode4
	( 
	.data(address_b_wire[12]),
	.enable(wren_b),
	.eq(wire_decode4_eq));
	shape_decode   decode_a
	( 
	.data(address_a_wire[12]),
	.enable(1'b1),
	.eq(wire_decode_a_eq));
	shape_decode   decode_b
	( 
	.data(address_b_wire[12]),
	.enable(1'b1),
	.eq(wire_decode_b_eq));
	shape_mux   mux5
	( 
	.data({wire_ram_block2a_15portadataout[0], wire_ram_block2a_14portadataout[0], wire_ram_block2a_13portadataout[0], wire_ram_block2a_12portadataout[0], wire_ram_block2a_11portadataout[0], wire_ram_block2a_10portadataout[0], wire_ram_block2a_9portadataout[0], wire_ram_block2a_8portadataout[0], wire_ram_block2a_7portadataout[0], wire_ram_block2a_6portadataout[0], wire_ram_block2a_5portadataout[0], wire_ram_block2a_4portadataout[0], wire_ram_block2a_3portadataout[0], wire_ram_block2a_2portadataout[0], wire_ram_block2a_1portadataout[0], wire_ram_block2a_0portadataout[0]}),
	.result(wire_mux5_result),
	.sel(address_reg_a));
	shape_mux   mux6
	( 
	.data({wire_ram_block2a_15portbdataout[0], wire_ram_block2a_14portbdataout[0], wire_ram_block2a_13portbdataout[0], wire_ram_block2a_12portbdataout[0], wire_ram_block2a_11portbdataout[0], wire_ram_block2a_10portbdataout[0], wire_ram_block2a_9portbdataout[0], wire_ram_block2a_8portbdataout[0], wire_ram_block2a_7portbdataout[0], wire_ram_block2a_6portbdataout[0], wire_ram_block2a_5portbdataout[0], wire_ram_block2a_4portbdataout[0], wire_ram_block2a_3portbdataout[0], wire_ram_block2a_2portbdataout[0], wire_ram_block2a_1portbdataout[0], wire_ram_block2a_0portbdataout[0]}),
	.result(wire_mux6_result),
	.sel(address_reg_b));
	cycloneii_ram_block   ram_block2a_0
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[0]),
	.ena1(wire_decode_b_eq[0]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[0]}),
	.portadataout(wire_ram_block2a_0portadataout[0:0]),
	.portawe(wire_decode3_eq[0]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[0]}),
	.portbdataout(wire_ram_block2a_0portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[0])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_0.connectivity_checking = "OFF",
		ram_block2a_0.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_0.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_0.operation_mode = "bidir_dual_port",
		ram_block2a_0.port_a_address_width = 12,
		ram_block2a_0.port_a_data_width = 1,
		ram_block2a_0.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_0.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_0.port_a_first_address = 0,
		ram_block2a_0.port_a_first_bit_number = 0,
		ram_block2a_0.port_a_last_address = 4095,
		ram_block2a_0.port_a_logical_ram_depth = 8192,
		ram_block2a_0.port_a_logical_ram_width = 8,
		ram_block2a_0.port_b_address_clock = "clock1",
		ram_block2a_0.port_b_address_width = 12,
		ram_block2a_0.port_b_data_in_clock = "clock1",
		ram_block2a_0.port_b_data_width = 1,
		ram_block2a_0.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_0.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_0.port_b_first_address = 0,
		ram_block2a_0.port_b_first_bit_number = 0,
		ram_block2a_0.port_b_last_address = 4095,
		ram_block2a_0.port_b_logical_ram_depth = 8192,
		ram_block2a_0.port_b_logical_ram_width = 8,
		ram_block2a_0.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_0.power_up_uninitialized = "false",
		ram_block2a_0.ram_block_type = "M4K",
		ram_block2a_0.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_1
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[0]),
	.ena1(wire_decode_b_eq[0]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[1]}),
	.portadataout(wire_ram_block2a_1portadataout[0:0]),
	.portawe(wire_decode3_eq[0]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[1]}),
	.portbdataout(wire_ram_block2a_1portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[0])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_1.connectivity_checking = "OFF",
		ram_block2a_1.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_1.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_1.operation_mode = "bidir_dual_port",
		ram_block2a_1.port_a_address_width = 12,
		ram_block2a_1.port_a_data_width = 1,
		ram_block2a_1.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_1.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_1.port_a_first_address = 0,
		ram_block2a_1.port_a_first_bit_number = 1,
		ram_block2a_1.port_a_last_address = 4095,
		ram_block2a_1.port_a_logical_ram_depth = 8192,
		ram_block2a_1.port_a_logical_ram_width = 8,
		ram_block2a_1.port_b_address_clock = "clock1",
		ram_block2a_1.port_b_address_width = 12,
		ram_block2a_1.port_b_data_in_clock = "clock1",
		ram_block2a_1.port_b_data_width = 1,
		ram_block2a_1.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_1.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_1.port_b_first_address = 0,
		ram_block2a_1.port_b_first_bit_number = 1,
		ram_block2a_1.port_b_last_address = 4095,
		ram_block2a_1.port_b_logical_ram_depth = 8192,
		ram_block2a_1.port_b_logical_ram_width = 8,
		ram_block2a_1.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_1.power_up_uninitialized = "false",
		ram_block2a_1.ram_block_type = "M4K",
		ram_block2a_1.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_2
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[0]),
	.ena1(wire_decode_b_eq[0]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[2]}),
	.portadataout(wire_ram_block2a_2portadataout[0:0]),
	.portawe(wire_decode3_eq[0]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[2]}),
	.portbdataout(wire_ram_block2a_2portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[0])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_2.connectivity_checking = "OFF",
		ram_block2a_2.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_2.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_2.operation_mode = "bidir_dual_port",
		ram_block2a_2.port_a_address_width = 12,
		ram_block2a_2.port_a_data_width = 1,
		ram_block2a_2.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_2.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_2.port_a_first_address = 0,
		ram_block2a_2.port_a_first_bit_number = 2,
		ram_block2a_2.port_a_last_address = 4095,
		ram_block2a_2.port_a_logical_ram_depth = 8192,
		ram_block2a_2.port_a_logical_ram_width = 8,
		ram_block2a_2.port_b_address_clock = "clock1",
		ram_block2a_2.port_b_address_width = 12,
		ram_block2a_2.port_b_data_in_clock = "clock1",
		ram_block2a_2.port_b_data_width = 1,
		ram_block2a_2.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_2.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_2.port_b_first_address = 0,
		ram_block2a_2.port_b_first_bit_number = 2,
		ram_block2a_2.port_b_last_address = 4095,
		ram_block2a_2.port_b_logical_ram_depth = 8192,
		ram_block2a_2.port_b_logical_ram_width = 8,
		ram_block2a_2.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_2.power_up_uninitialized = "false",
		ram_block2a_2.ram_block_type = "M4K",
		ram_block2a_2.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_3
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[0]),
	.ena1(wire_decode_b_eq[0]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[3]}),
	.portadataout(wire_ram_block2a_3portadataout[0:0]),
	.portawe(wire_decode3_eq[0]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[3]}),
	.portbdataout(wire_ram_block2a_3portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[0])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_3.connectivity_checking = "OFF",
		ram_block2a_3.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_3.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_3.operation_mode = "bidir_dual_port",
		ram_block2a_3.port_a_address_width = 12,
		ram_block2a_3.port_a_data_width = 1,
		ram_block2a_3.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_3.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_3.port_a_first_address = 0,
		ram_block2a_3.port_a_first_bit_number = 3,
		ram_block2a_3.port_a_last_address = 4095,
		ram_block2a_3.port_a_logical_ram_depth = 8192,
		ram_block2a_3.port_a_logical_ram_width = 8,
		ram_block2a_3.port_b_address_clock = "clock1",
		ram_block2a_3.port_b_address_width = 12,
		ram_block2a_3.port_b_data_in_clock = "clock1",
		ram_block2a_3.port_b_data_width = 1,
		ram_block2a_3.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_3.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_3.port_b_first_address = 0,
		ram_block2a_3.port_b_first_bit_number = 3,
		ram_block2a_3.port_b_last_address = 4095,
		ram_block2a_3.port_b_logical_ram_depth = 8192,
		ram_block2a_3.port_b_logical_ram_width = 8,
		ram_block2a_3.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_3.power_up_uninitialized = "false",
		ram_block2a_3.ram_block_type = "M4K",
		ram_block2a_3.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_4
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[0]),
	.ena1(wire_decode_b_eq[0]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[4]}),
	.portadataout(wire_ram_block2a_4portadataout[0:0]),
	.portawe(wire_decode3_eq[0]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[4]}),
	.portbdataout(wire_ram_block2a_4portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[0])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_4.connectivity_checking = "OFF",
		ram_block2a_4.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_4.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_4.operation_mode = "bidir_dual_port",
		ram_block2a_4.port_a_address_width = 12,
		ram_block2a_4.port_a_data_width = 1,
		ram_block2a_4.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_4.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_4.port_a_first_address = 0,
		ram_block2a_4.port_a_first_bit_number = 4,
		ram_block2a_4.port_a_last_address = 4095,
		ram_block2a_4.port_a_logical_ram_depth = 8192,
		ram_block2a_4.port_a_logical_ram_width = 8,
		ram_block2a_4.port_b_address_clock = "clock1",
		ram_block2a_4.port_b_address_width = 12,
		ram_block2a_4.port_b_data_in_clock = "clock1",
		ram_block2a_4.port_b_data_width = 1,
		ram_block2a_4.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_4.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_4.port_b_first_address = 0,
		ram_block2a_4.port_b_first_bit_number = 4,
		ram_block2a_4.port_b_last_address = 4095,
		ram_block2a_4.port_b_logical_ram_depth = 8192,
		ram_block2a_4.port_b_logical_ram_width = 8,
		ram_block2a_4.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_4.power_up_uninitialized = "false",
		ram_block2a_4.ram_block_type = "M4K",
		ram_block2a_4.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_5
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[0]),
	.ena1(wire_decode_b_eq[0]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[5]}),
	.portadataout(wire_ram_block2a_5portadataout[0:0]),
	.portawe(wire_decode3_eq[0]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[5]}),
	.portbdataout(wire_ram_block2a_5portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[0])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_5.connectivity_checking = "OFF",
		ram_block2a_5.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_5.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_5.operation_mode = "bidir_dual_port",
		ram_block2a_5.port_a_address_width = 12,
		ram_block2a_5.port_a_data_width = 1,
		ram_block2a_5.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_5.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_5.port_a_first_address = 0,
		ram_block2a_5.port_a_first_bit_number = 5,
		ram_block2a_5.port_a_last_address = 4095,
		ram_block2a_5.port_a_logical_ram_depth = 8192,
		ram_block2a_5.port_a_logical_ram_width = 8,
		ram_block2a_5.port_b_address_clock = "clock1",
		ram_block2a_5.port_b_address_width = 12,
		ram_block2a_5.port_b_data_in_clock = "clock1",
		ram_block2a_5.port_b_data_width = 1,
		ram_block2a_5.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_5.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_5.port_b_first_address = 0,
		ram_block2a_5.port_b_first_bit_number = 5,
		ram_block2a_5.port_b_last_address = 4095,
		ram_block2a_5.port_b_logical_ram_depth = 8192,
		ram_block2a_5.port_b_logical_ram_width = 8,
		ram_block2a_5.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_5.power_up_uninitialized = "false",
		ram_block2a_5.ram_block_type = "M4K",
		ram_block2a_5.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_6
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[0]),
	.ena1(wire_decode_b_eq[0]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[6]}),
	.portadataout(wire_ram_block2a_6portadataout[0:0]),
	.portawe(wire_decode3_eq[0]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[6]}),
	.portbdataout(wire_ram_block2a_6portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[0])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_6.connectivity_checking = "OFF",
		ram_block2a_6.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_6.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_6.operation_mode = "bidir_dual_port",
		ram_block2a_6.port_a_address_width = 12,
		ram_block2a_6.port_a_data_width = 1,
		ram_block2a_6.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_6.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_6.port_a_first_address = 0,
		ram_block2a_6.port_a_first_bit_number = 6,
		ram_block2a_6.port_a_last_address = 4095,
		ram_block2a_6.port_a_logical_ram_depth = 8192,
		ram_block2a_6.port_a_logical_ram_width = 8,
		ram_block2a_6.port_b_address_clock = "clock1",
		ram_block2a_6.port_b_address_width = 12,
		ram_block2a_6.port_b_data_in_clock = "clock1",
		ram_block2a_6.port_b_data_width = 1,
		ram_block2a_6.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_6.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_6.port_b_first_address = 0,
		ram_block2a_6.port_b_first_bit_number = 6,
		ram_block2a_6.port_b_last_address = 4095,
		ram_block2a_6.port_b_logical_ram_depth = 8192,
		ram_block2a_6.port_b_logical_ram_width = 8,
		ram_block2a_6.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_6.power_up_uninitialized = "false",
		ram_block2a_6.ram_block_type = "M4K",
		ram_block2a_6.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_7
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[0]),
	.ena1(wire_decode_b_eq[0]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[7]}),
	.portadataout(wire_ram_block2a_7portadataout[0:0]),
	.portawe(wire_decode3_eq[0]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[7]}),
	.portbdataout(wire_ram_block2a_7portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[0])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_7.connectivity_checking = "OFF",
		ram_block2a_7.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_7.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_7.operation_mode = "bidir_dual_port",
		ram_block2a_7.port_a_address_width = 12,
		ram_block2a_7.port_a_data_width = 1,
		ram_block2a_7.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_7.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_7.port_a_first_address = 0,
		ram_block2a_7.port_a_first_bit_number = 7,
		ram_block2a_7.port_a_last_address = 4095,
		ram_block2a_7.port_a_logical_ram_depth = 8192,
		ram_block2a_7.port_a_logical_ram_width = 8,
		ram_block2a_7.port_b_address_clock = "clock1",
		ram_block2a_7.port_b_address_width = 12,
		ram_block2a_7.port_b_data_in_clock = "clock1",
		ram_block2a_7.port_b_data_width = 1,
		ram_block2a_7.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_7.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_7.port_b_first_address = 0,
		ram_block2a_7.port_b_first_bit_number = 7,
		ram_block2a_7.port_b_last_address = 4095,
		ram_block2a_7.port_b_logical_ram_depth = 8192,
		ram_block2a_7.port_b_logical_ram_width = 8,
		ram_block2a_7.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_7.power_up_uninitialized = "false",
		ram_block2a_7.ram_block_type = "M4K",
		ram_block2a_7.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_8
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[1]),
	.ena1(wire_decode_b_eq[1]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[0]}),
	.portadataout(wire_ram_block2a_8portadataout[0:0]),
	.portawe(wire_decode3_eq[1]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[0]}),
	.portbdataout(wire_ram_block2a_8portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[1])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_8.connectivity_checking = "OFF",
		ram_block2a_8.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_8.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_8.operation_mode = "bidir_dual_port",
		ram_block2a_8.port_a_address_width = 12,
		ram_block2a_8.port_a_data_width = 1,
		ram_block2a_8.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_8.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_8.port_a_first_address = 4096,
		ram_block2a_8.port_a_first_bit_number = 0,
		ram_block2a_8.port_a_last_address = 8191,
		ram_block2a_8.port_a_logical_ram_depth = 8192,
		ram_block2a_8.port_a_logical_ram_width = 8,
		ram_block2a_8.port_b_address_clock = "clock1",
		ram_block2a_8.port_b_address_width = 12,
		ram_block2a_8.port_b_data_in_clock = "clock1",
		ram_block2a_8.port_b_data_width = 1,
		ram_block2a_8.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_8.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_8.port_b_first_address = 4096,
		ram_block2a_8.port_b_first_bit_number = 0,
		ram_block2a_8.port_b_last_address = 8191,
		ram_block2a_8.port_b_logical_ram_depth = 8192,
		ram_block2a_8.port_b_logical_ram_width = 8,
		ram_block2a_8.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_8.power_up_uninitialized = "false",
		ram_block2a_8.ram_block_type = "M4K",
		ram_block2a_8.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_9
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[1]),
	.ena1(wire_decode_b_eq[1]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[1]}),
	.portadataout(wire_ram_block2a_9portadataout[0:0]),
	.portawe(wire_decode3_eq[1]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[1]}),
	.portbdataout(wire_ram_block2a_9portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[1])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_9.connectivity_checking = "OFF",
		ram_block2a_9.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_9.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_9.operation_mode = "bidir_dual_port",
		ram_block2a_9.port_a_address_width = 12,
		ram_block2a_9.port_a_data_width = 1,
		ram_block2a_9.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_9.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_9.port_a_first_address = 4096,
		ram_block2a_9.port_a_first_bit_number = 1,
		ram_block2a_9.port_a_last_address = 8191,
		ram_block2a_9.port_a_logical_ram_depth = 8192,
		ram_block2a_9.port_a_logical_ram_width = 8,
		ram_block2a_9.port_b_address_clock = "clock1",
		ram_block2a_9.port_b_address_width = 12,
		ram_block2a_9.port_b_data_in_clock = "clock1",
		ram_block2a_9.port_b_data_width = 1,
		ram_block2a_9.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_9.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_9.port_b_first_address = 4096,
		ram_block2a_9.port_b_first_bit_number = 1,
		ram_block2a_9.port_b_last_address = 8191,
		ram_block2a_9.port_b_logical_ram_depth = 8192,
		ram_block2a_9.port_b_logical_ram_width = 8,
		ram_block2a_9.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_9.power_up_uninitialized = "false",
		ram_block2a_9.ram_block_type = "M4K",
		ram_block2a_9.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_10
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[1]),
	.ena1(wire_decode_b_eq[1]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[2]}),
	.portadataout(wire_ram_block2a_10portadataout[0:0]),
	.portawe(wire_decode3_eq[1]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[2]}),
	.portbdataout(wire_ram_block2a_10portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[1])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_10.connectivity_checking = "OFF",
		ram_block2a_10.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_10.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_10.operation_mode = "bidir_dual_port",
		ram_block2a_10.port_a_address_width = 12,
		ram_block2a_10.port_a_data_width = 1,
		ram_block2a_10.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_10.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_10.port_a_first_address = 4096,
		ram_block2a_10.port_a_first_bit_number = 2,
		ram_block2a_10.port_a_last_address = 8191,
		ram_block2a_10.port_a_logical_ram_depth = 8192,
		ram_block2a_10.port_a_logical_ram_width = 8,
		ram_block2a_10.port_b_address_clock = "clock1",
		ram_block2a_10.port_b_address_width = 12,
		ram_block2a_10.port_b_data_in_clock = "clock1",
		ram_block2a_10.port_b_data_width = 1,
		ram_block2a_10.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_10.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_10.port_b_first_address = 4096,
		ram_block2a_10.port_b_first_bit_number = 2,
		ram_block2a_10.port_b_last_address = 8191,
		ram_block2a_10.port_b_logical_ram_depth = 8192,
		ram_block2a_10.port_b_logical_ram_width = 8,
		ram_block2a_10.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_10.power_up_uninitialized = "false",
		ram_block2a_10.ram_block_type = "M4K",
		ram_block2a_10.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_11
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[1]),
	.ena1(wire_decode_b_eq[1]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[3]}),
	.portadataout(wire_ram_block2a_11portadataout[0:0]),
	.portawe(wire_decode3_eq[1]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[3]}),
	.portbdataout(wire_ram_block2a_11portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[1])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_11.connectivity_checking = "OFF",
		ram_block2a_11.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_11.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_11.operation_mode = "bidir_dual_port",
		ram_block2a_11.port_a_address_width = 12,
		ram_block2a_11.port_a_data_width = 1,
		ram_block2a_11.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_11.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_11.port_a_first_address = 4096,
		ram_block2a_11.port_a_first_bit_number = 3,
		ram_block2a_11.port_a_last_address = 8191,
		ram_block2a_11.port_a_logical_ram_depth = 8192,
		ram_block2a_11.port_a_logical_ram_width = 8,
		ram_block2a_11.port_b_address_clock = "clock1",
		ram_block2a_11.port_b_address_width = 12,
		ram_block2a_11.port_b_data_in_clock = "clock1",
		ram_block2a_11.port_b_data_width = 1,
		ram_block2a_11.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_11.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_11.port_b_first_address = 4096,
		ram_block2a_11.port_b_first_bit_number = 3,
		ram_block2a_11.port_b_last_address = 8191,
		ram_block2a_11.port_b_logical_ram_depth = 8192,
		ram_block2a_11.port_b_logical_ram_width = 8,
		ram_block2a_11.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_11.power_up_uninitialized = "false",
		ram_block2a_11.ram_block_type = "M4K",
		ram_block2a_11.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_12
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[1]),
	.ena1(wire_decode_b_eq[1]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[4]}),
	.portadataout(wire_ram_block2a_12portadataout[0:0]),
	.portawe(wire_decode3_eq[1]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[4]}),
	.portbdataout(wire_ram_block2a_12portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[1])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_12.connectivity_checking = "OFF",
		ram_block2a_12.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_12.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_12.operation_mode = "bidir_dual_port",
		ram_block2a_12.port_a_address_width = 12,
		ram_block2a_12.port_a_data_width = 1,
		ram_block2a_12.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_12.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_12.port_a_first_address = 4096,
		ram_block2a_12.port_a_first_bit_number = 4,
		ram_block2a_12.port_a_last_address = 8191,
		ram_block2a_12.port_a_logical_ram_depth = 8192,
		ram_block2a_12.port_a_logical_ram_width = 8,
		ram_block2a_12.port_b_address_clock = "clock1",
		ram_block2a_12.port_b_address_width = 12,
		ram_block2a_12.port_b_data_in_clock = "clock1",
		ram_block2a_12.port_b_data_width = 1,
		ram_block2a_12.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_12.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_12.port_b_first_address = 4096,
		ram_block2a_12.port_b_first_bit_number = 4,
		ram_block2a_12.port_b_last_address = 8191,
		ram_block2a_12.port_b_logical_ram_depth = 8192,
		ram_block2a_12.port_b_logical_ram_width = 8,
		ram_block2a_12.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_12.power_up_uninitialized = "false",
		ram_block2a_12.ram_block_type = "M4K",
		ram_block2a_12.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_13
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[1]),
	.ena1(wire_decode_b_eq[1]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[5]}),
	.portadataout(wire_ram_block2a_13portadataout[0:0]),
	.portawe(wire_decode3_eq[1]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[5]}),
	.portbdataout(wire_ram_block2a_13portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[1])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_13.connectivity_checking = "OFF",
		ram_block2a_13.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_13.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_13.operation_mode = "bidir_dual_port",
		ram_block2a_13.port_a_address_width = 12,
		ram_block2a_13.port_a_data_width = 1,
		ram_block2a_13.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_13.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_13.port_a_first_address = 4096,
		ram_block2a_13.port_a_first_bit_number = 5,
		ram_block2a_13.port_a_last_address = 8191,
		ram_block2a_13.port_a_logical_ram_depth = 8192,
		ram_block2a_13.port_a_logical_ram_width = 8,
		ram_block2a_13.port_b_address_clock = "clock1",
		ram_block2a_13.port_b_address_width = 12,
		ram_block2a_13.port_b_data_in_clock = "clock1",
		ram_block2a_13.port_b_data_width = 1,
		ram_block2a_13.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_13.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_13.port_b_first_address = 4096,
		ram_block2a_13.port_b_first_bit_number = 5,
		ram_block2a_13.port_b_last_address = 8191,
		ram_block2a_13.port_b_logical_ram_depth = 8192,
		ram_block2a_13.port_b_logical_ram_width = 8,
		ram_block2a_13.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_13.power_up_uninitialized = "false",
		ram_block2a_13.ram_block_type = "M4K",
		ram_block2a_13.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_14
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[1]),
	.ena1(wire_decode_b_eq[1]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[6]}),
	.portadataout(wire_ram_block2a_14portadataout[0:0]),
	.portawe(wire_decode3_eq[1]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[6]}),
	.portbdataout(wire_ram_block2a_14portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[1])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_14.connectivity_checking = "OFF",
		ram_block2a_14.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_14.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_14.operation_mode = "bidir_dual_port",
		ram_block2a_14.port_a_address_width = 12,
		ram_block2a_14.port_a_data_width = 1,
		ram_block2a_14.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_14.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_14.port_a_first_address = 4096,
		ram_block2a_14.port_a_first_bit_number = 6,
		ram_block2a_14.port_a_last_address = 8191,
		ram_block2a_14.port_a_logical_ram_depth = 8192,
		ram_block2a_14.port_a_logical_ram_width = 8,
		ram_block2a_14.port_b_address_clock = "clock1",
		ram_block2a_14.port_b_address_width = 12,
		ram_block2a_14.port_b_data_in_clock = "clock1",
		ram_block2a_14.port_b_data_width = 1,
		ram_block2a_14.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_14.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_14.port_b_first_address = 4096,
		ram_block2a_14.port_b_first_bit_number = 6,
		ram_block2a_14.port_b_last_address = 8191,
		ram_block2a_14.port_b_logical_ram_depth = 8192,
		ram_block2a_14.port_b_logical_ram_width = 8,
		ram_block2a_14.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_14.power_up_uninitialized = "false",
		ram_block2a_14.ram_block_type = "M4K",
		ram_block2a_14.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block2a_15
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_decode_a_eq[1]),
	.ena1(wire_decode_b_eq[1]),
	.portaaddr({address_a_wire[11:0]}),
	.portadatain({data_a[7]}),
	.portadataout(wire_ram_block2a_15portadataout[0:0]),
	.portawe(wire_decode3_eq[1]),
	.portbaddr({address_b_wire[11:0]}),
	.portbdatain({data_b[7]}),
	.portbdataout(wire_ram_block2a_15portbdataout[0:0]),
	.portbrewe(wire_decode4_eq[1])
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block2a_15.connectivity_checking = "OFF",
		ram_block2a_15.logical_ram_name = "ALTSYNCRAM",
		ram_block2a_15.mixed_port_feed_through_mode = "dont_care",
		ram_block2a_15.operation_mode = "bidir_dual_port",
		ram_block2a_15.port_a_address_width = 12,
		ram_block2a_15.port_a_data_width = 1,
		ram_block2a_15.port_a_disable_ce_on_input_registers = "off",
		ram_block2a_15.port_a_disable_ce_on_output_registers = "on",
		ram_block2a_15.port_a_first_address = 4096,
		ram_block2a_15.port_a_first_bit_number = 7,
		ram_block2a_15.port_a_last_address = 8191,
		ram_block2a_15.port_a_logical_ram_depth = 8192,
		ram_block2a_15.port_a_logical_ram_width = 8,
		ram_block2a_15.port_b_address_clock = "clock1",
		ram_block2a_15.port_b_address_width = 12,
		ram_block2a_15.port_b_data_in_clock = "clock1",
		ram_block2a_15.port_b_data_width = 1,
		ram_block2a_15.port_b_disable_ce_on_input_registers = "off",
		ram_block2a_15.port_b_disable_ce_on_output_registers = "on",
		ram_block2a_15.port_b_first_address = 4096,
		ram_block2a_15.port_b_first_bit_number = 7,
		ram_block2a_15.port_b_last_address = 8191,
		ram_block2a_15.port_b_logical_ram_depth = 8192,
		ram_block2a_15.port_b_logical_ram_width = 8,
		ram_block2a_15.port_b_read_enable_write_enable_clock = "clock1",
		ram_block2a_15.power_up_uninitialized = "false",
		ram_block2a_15.ram_block_type = "M4K",
		ram_block2a_15.lpm_type = "cycloneii_ram_block";
	assign
		address_a_sel = address_a[12],
		address_a_wire = address_a,
		address_b_sel = address_b[12],
		address_b_wire = address_b,
		q_a = wire_mux5_result,
		q_b = wire_mux6_result;
endmodule //shape_altsyncram1

//synthesis_resources = lut 20 M4K 16 reg 2 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"OPTIMIZE_POWER_DURING_SYNTHESIS=NORMAL_COMPILATION"} *)
module  shape_altsyncram
	( 
	address_a,
	address_b,
	clock0,
	clock1,
	data_a,
	q_b,
	wren_a) /* synthesis synthesis_clearbox=1 */;
	input   [12:0]  address_a;
	input   [12:0]  address_b;
	input   clock0;
	input   clock1;
	input   [7:0]  data_a;
	output   [7:0]  q_b;
	input   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   [12:0]  address_b;
	tri1   clock0;
	tri1   clock1;
	tri1   [7:0]  data_a;
	tri0   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [7:0]   wire_altsyncram1_q_a;
	wire  [7:0]   wire_altsyncram1_q_b;

	shape_altsyncram1   altsyncram1
	( 
	.address_a(address_b),
	.address_b(address_a),
	.clock0(clock1),
	.clock1(clock0),
	.clocken1(wren_a),
	.data_a({8{1'b1}}),
	.data_b(data_a),
	.q_a(wire_altsyncram1_q_a),
	.q_b(wire_altsyncram1_q_b),
	.wren_a(1'b0),
	.wren_b(wren_a));
	assign
		q_b = wire_altsyncram1_q_a;
endmodule //shape_altsyncram
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module shape (
	data,
	rdaddress,
	rdclock,
	wraddress,
	wrclock,
	wren,
	q)/* synthesis synthesis_clearbox = 1 */;

	input	[7:0]  data;
	input	[12:0]  rdaddress;
	input	  rdclock;
	input	[12:0]  wraddress;
	input	  wrclock;
	input	  wren;
	output	[7:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1	  wrclock;
	tri0	  wren;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire [7:0] sub_wire0;
	wire [7:0] q = sub_wire0[7:0];

	shape_altsyncram	shape_altsyncram_component (
				.address_a (wraddress),
				.clock0 (wrclock),
				.data_a (data),
				.wren_a (wren),
				.address_b (rdaddress),
				.clock1 (rdclock),
				.q_b (sub_wire0));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: ADDRESSSTALL_A NUMERIC "0"
// Retrieval info: PRIVATE: ADDRESSSTALL_B NUMERIC "0"
// Retrieval info: PRIVATE: BYTEENA_ACLR_A NUMERIC "0"
// Retrieval info: PRIVATE: BYTEENA_ACLR_B NUMERIC "0"
// Retrieval info: PRIVATE: BYTE_ENABLE_A NUMERIC "0"
// Retrieval info: PRIVATE: BYTE_ENABLE_B NUMERIC "0"
// Retrieval info: PRIVATE: BYTE_SIZE NUMERIC "8"
// Retrieval info: PRIVATE: BlankMemory NUMERIC "1"
// Retrieval info: PRIVATE: CLOCK_ENABLE_INPUT_A NUMERIC "0"
// Retrieval info: PRIVATE: CLOCK_ENABLE_INPUT_B NUMERIC "0"
// Retrieval info: PRIVATE: CLOCK_ENABLE_OUTPUT_A NUMERIC "0"
// Retrieval info: PRIVATE: CLOCK_ENABLE_OUTPUT_B NUMERIC "0"
// Retrieval info: PRIVATE: CLRdata NUMERIC "0"
// Retrieval info: PRIVATE: CLRq NUMERIC "0"
// Retrieval info: PRIVATE: CLRrdaddress NUMERIC "0"
// Retrieval info: PRIVATE: CLRrren NUMERIC "0"
// Retrieval info: PRIVATE: CLRwraddress NUMERIC "0"
// Retrieval info: PRIVATE: CLRwren NUMERIC "0"
// Retrieval info: PRIVATE: Clock NUMERIC "1"
// Retrieval info: PRIVATE: Clock_A NUMERIC "0"
// Retrieval info: PRIVATE: Clock_B NUMERIC "0"
// Retrieval info: PRIVATE: IMPLEMENT_IN_LES NUMERIC "0"
// Retrieval info: PRIVATE: INDATA_ACLR_B NUMERIC "0"
// Retrieval info: PRIVATE: INDATA_REG_B NUMERIC "0"
// Retrieval info: PRIVATE: INIT_FILE_LAYOUT STRING "PORT_B"
// Retrieval info: PRIVATE: INIT_TO_SIM_X NUMERIC "0"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone II"
// Retrieval info: PRIVATE: JTAG_ENABLED NUMERIC "0"
// Retrieval info: PRIVATE: JTAG_ID STRING "NONE"
// Retrieval info: PRIVATE: MAXIMUM_DEPTH NUMERIC "0"
// Retrieval info: PRIVATE: MEMSIZE NUMERIC "65536"
// Retrieval info: PRIVATE: MEM_IN_BITS NUMERIC "0"
// Retrieval info: PRIVATE: MIFfilename STRING "./machine/video/forme.hex"
// Retrieval info: PRIVATE: OPERATION_MODE NUMERIC "2"
// Retrieval info: PRIVATE: OUTDATA_ACLR_B NUMERIC "0"
// Retrieval info: PRIVATE: OUTDATA_REG_B NUMERIC "0"
// Retrieval info: PRIVATE: RAM_BLOCK_TYPE NUMERIC "2"
// Retrieval info: PRIVATE: READ_DURING_WRITE_MODE_MIXED_PORTS NUMERIC "2"
// Retrieval info: PRIVATE: READ_DURING_WRITE_MODE_PORT_A NUMERIC "3"
// Retrieval info: PRIVATE: READ_DURING_WRITE_MODE_PORT_B NUMERIC "3"
// Retrieval info: PRIVATE: REGdata NUMERIC "1"
// Retrieval info: PRIVATE: REGq NUMERIC "1"
// Retrieval info: PRIVATE: REGrdaddress NUMERIC "1"
// Retrieval info: PRIVATE: REGrren NUMERIC "1"
// Retrieval info: PRIVATE: REGwraddress NUMERIC "1"
// Retrieval info: PRIVATE: REGwren NUMERIC "1"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: USE_DIFF_CLKEN NUMERIC "0"
// Retrieval info: PRIVATE: UseDPRAM NUMERIC "1"
// Retrieval info: PRIVATE: VarWidth NUMERIC "0"
// Retrieval info: PRIVATE: WIDTH_READ_A NUMERIC "8"
// Retrieval info: PRIVATE: WIDTH_READ_B NUMERIC "8"
// Retrieval info: PRIVATE: WIDTH_WRITE_A NUMERIC "8"
// Retrieval info: PRIVATE: WIDTH_WRITE_B NUMERIC "8"
// Retrieval info: PRIVATE: WRADDR_ACLR_B NUMERIC "0"
// Retrieval info: PRIVATE: WRADDR_REG_B NUMERIC "0"
// Retrieval info: PRIVATE: WRCTRL_ACLR_B NUMERIC "0"
// Retrieval info: PRIVATE: enable NUMERIC "0"
// Retrieval info: PRIVATE: rden NUMERIC "0"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: ADDRESS_REG_B STRING "CLOCK1"
// Retrieval info: CONSTANT: CLOCK_ENABLE_INPUT_A STRING "BYPASS"
// Retrieval info: CONSTANT: CLOCK_ENABLE_INPUT_B STRING "BYPASS"
// Retrieval info: CONSTANT: CLOCK_ENABLE_OUTPUT_A STRING "BYPASS"
// Retrieval info: CONSTANT: CLOCK_ENABLE_OUTPUT_B STRING "BYPASS"
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone II"
// Retrieval info: CONSTANT: LPM_TYPE STRING "altsyncram"
// Retrieval info: CONSTANT: NUMWORDS_A NUMERIC "8192"
// Retrieval info: CONSTANT: NUMWORDS_B NUMERIC "8192"
// Retrieval info: CONSTANT: OPERATION_MODE STRING "DUAL_PORT"
// Retrieval info: CONSTANT: OUTDATA_ACLR_B STRING "NONE"
// Retrieval info: CONSTANT: OUTDATA_REG_B STRING "UNREGISTERED"
// Retrieval info: CONSTANT: POWER_UP_UNINITIALIZED STRING "FALSE"
// Retrieval info: CONSTANT: RAM_BLOCK_TYPE STRING "M4K"
// Retrieval info: CONSTANT: WIDTHAD_A NUMERIC "13"
// Retrieval info: CONSTANT: WIDTHAD_B NUMERIC "13"
// Retrieval info: CONSTANT: WIDTH_A NUMERIC "8"
// Retrieval info: CONSTANT: WIDTH_B NUMERIC "8"
// Retrieval info: CONSTANT: WIDTH_BYTEENA_A NUMERIC "1"
// Retrieval info: USED_PORT: data 0 0 8 0 INPUT NODEFVAL "data[7..0]"
// Retrieval info: USED_PORT: q 0 0 8 0 OUTPUT NODEFVAL "q[7..0]"
// Retrieval info: USED_PORT: rdaddress 0 0 13 0 INPUT NODEFVAL "rdaddress[12..0]"
// Retrieval info: USED_PORT: rdclock 0 0 0 0 INPUT NODEFVAL "rdclock"
// Retrieval info: USED_PORT: wraddress 0 0 13 0 INPUT NODEFVAL "wraddress[12..0]"
// Retrieval info: USED_PORT: wrclock 0 0 0 0 INPUT VCC "wrclock"
// Retrieval info: USED_PORT: wren 0 0 0 0 INPUT GND "wren"
// Retrieval info: CONNECT: @address_a 0 0 13 0 wraddress 0 0 13 0
// Retrieval info: CONNECT: @address_b 0 0 13 0 rdaddress 0 0 13 0
// Retrieval info: CONNECT: @clock0 0 0 0 0 wrclock 0 0 0 0
// Retrieval info: CONNECT: @clock1 0 0 0 0 rdclock 0 0 0 0
// Retrieval info: CONNECT: @data_a 0 0 8 0 data 0 0 8 0
// Retrieval info: CONNECT: @wren_a 0 0 0 0 wren 0 0 0 0
// Retrieval info: CONNECT: q 0 0 8 0 @q_b 0 0 8 0
// Retrieval info: GEN_FILE: TYPE_NORMAL shape.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL shape.inc TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL shape.cmp TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL shape.bsf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL shape_inst.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL shape_syn.v TRUE
// Retrieval info: LIB_FILE: altera_mf
