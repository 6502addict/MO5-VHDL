# mo5-512k
MO5 512K Cartridge
<br>
![al-tag](https://github.com/6502addict/MO5-VHDL/blob/main/screenshot/basic-boot-screen.jpg)
<br>
## Description
this cartridge is compatible with thomson MO5 64k cartridge
it's not a exact copy of the original cartridge<br>
but rather a rebuild from the manual
<br>
the $A7CB register controlling a MO5 64 cartrige is extended
to permit the access to 512k of memory
<br>
without the 3 jumpers the cartridge is behaving as the 
original thomson MEMO5 cartridge
<br>
with the jumpers set the cartridge can address 512k or memory
<br>

## Note:
The first goal of this board was to replace the original thomson board of 64K
<br>
with the use of modern chips it is easier to find a 128k or 512k chip than 64k
<br>
so I designed the 64k compatibility as the main feature and the extension
<br>
to 128k or 512k (dépending on the ram chip used AS6C1008 or AS6C4008) as goody.
<br>
Due to negative comment on forums saying that this extra memory is useless
<br>
I've listened this comments and removed the jumpers permitting to exploit
<br>
the extra memory.
<br>
As a few 512k board exist I let 512k test procedure and manual
but eagle files are now for 64k boards



## Control Register in $A7CB (without jumpers)
```
bits 0-1   bank number
bit 2      1 = ram visible
           0 = basic
bit 3      1 cartridge ram is readable and writable
           0  cartridge ram is readable and read only
bits 4-7   unused        
```

## Control Register in $A7CB (with jumpers)
```
bits 0-1   bank number
bit 2      1 = ram visible
           0 = basic
bit 3      1 cartridge ram is readable and writable
           0  cartridge ram is readable and read only
bit 4-6    extend the bank number
bit 7      unused
```

## PCB
the pcb can be ordered from oshpark<br>
https://oshpark.com/shared_projects/e0GleW5L

## Bill of Materials
* 1 x socket  dip 32  600mil
* 3 x sockets dip 20  300mil
* 1 74LS273
* 1 RAM Alliance AS6C4008
* 2 GAL Lattice 16v8D
* 1 diode 1N4148
* 5 resistor 10k    1206
* 5 capacitor 100nf 1206
* 1 block of 3 jumpers

## GAL programming
the GALS can be easily programmed with a TL866-II plus programmer<br>
GAL-16V8D-AC7B is going in the horizontal socket  (check the marking)<br>
GAL-16V8D-MO512K is going in the vertical socket

## GAL compiling
The .JED files are sufficent to build the board<br>
they can be recompiled from the .VHD by using:<br>
"Lattice ispLEVER Classic"

## Build of the board
the easiest is to solder the component in the following order<br>
1. 5 100nf capacitor (back of the board)<br>
2. 5 10k resistor (back of the board)<br>
3. 4 sockets<br
4. BC547B<br>
5. 1N4148<br>
6. jumpers<br>

## Test programs
the test program is on Daniel's web site:  http://dcmoto.free.fr/programmes/test512k-mo5/index.html


## Test procedure
follow the instructions in https://github.com/6502addict/mo5-512k/blob/main/MO5-512k/debug


# MO5 FPGA Implementation Screenshots
# Captures d'écran de l'implémentation MO5 sur FPGA

This page showcases various screenshots from the MO5 FPGA implementation, demonstrating the boot process and several classic games.

Cette page présente diverses captures d'écran de l'implémentation MO5 sur FPGA, illustrant le processus de démarrage et plusieurs jeux classiques.

## Boot Process / Processus de démarrage

### Standard BASIC Boot Screen / Écran de démarrage BASIC standard

![Alt text](https://netfilters.eu/mo5/basic-boot-screen.jpg)

**English**: This is the standard boot screen of the MO5 when starting in BASIC mode without an SDDrive card inserted. The MO5 presents the BASIC environment, ready for programming or loading programs from cassette.

**Français**: Voici l'écran de démarrage standard du MO5 lors du lancement en mode BASIC sans carte SDDrive insérée. Le MO5 présente l'environnement BASIC, prêt pour la programmation ou le chargement de programmes depuis une cassette.

### SDDrive Boot Screen / Écran de démarrage avec SDDrive

<img src="./screenshot/sddrive-boot-screen.jpg" alt="SDDrive Menu Screen" width="640"/>

**English**: When an SDDrive SD card is inserted, the system automatically boots to this file selection menu. Users can navigate through the available .sd disk images using the arrow keys and select one by pressing ENTER.

**Français**: Lorsqu'une carte SD SDDrive est insérée, le système démarre automatiquement sur ce menu de sélection de fichiers. Les utilisateurs peuvent naviguer parmi les images disque .sd disponibles à l'aide des touches fléchées et en sélectionner une en appuyant sur ENTRÉE.

### BASIC with Disk Access / BASIC avec accès disque

<img src="./screenshot/disk-basic-screen.jpg" alt="BASIC with Disk Access" width="640"/>

**English**: This screen shows the MO5 in BASIC mode with SDDrive active. The system now has access to disk commands and can load and save programs to the virtual disk. Note the "DISK BASIC" message indicating the DOS is loaded.

**Français**: Cet écran montre le MO5 en mode BASIC avec SDDrive actif. Le système a maintenant accès aux commandes disque et peut charger et sauvegarder des programmes sur le disque virtuel. Notez le message "DISK BASIC" indiquant que le DOS est chargé.

## Classic MO5 Games / Jeux classiques du MO5

### 1000 Bornes

<img src="./screenshot/1000bornes.jpg" alt="1000 Bornes" width="640"/>

**English**: The digital adaptation of the famous French card game "1000 Bornes" (Mille Bornes). This strategy game simulates a car race where players must reach 1000 kilometers while dealing with obstacles like flat tires and accidents.

**Français**: L'adaptation numérique du célèbre jeu de cartes français "1000 Bornes". Ce jeu de stratégie simule une course automobile où les joueurs doivent parcourir 1000 kilomètres tout en faisant face à des obstacles comme les crevaisons et les accidents.

### Choplifter

<img src="./screenshot/choplifter.jpg" alt="Choplifter" width="640"/>

**English**: The MO5 version of the classic helicopter rescue game. Players pilot a helicopter to rescue hostages while avoiding enemy fire. Originally an Apple II game, this port brings the action to the Thomson MO5.

**Français**: La version MO5 du jeu classique de sauvetage en hélicoptère. Les joueurs pilotent un hélicoptère pour secourir des otages tout en évitant les tirs ennemis. À l'origine un jeu Apple II, ce portage apporte l'action sur le Thomson MO5.

### Astérix

<img src="./screenshot/asterix.jpg" alt="Astérix" width="640"/>

**English**: Based on the popular French comic book character, this game lets players control Astérix in his adventures through Roman-occupied Gaul. The MO5 version features colorful graphics that capture the spirit of the original comics.

**Français**: Basé sur le célèbre personnage de bande dessinée français, ce jeu permet aux joueurs de contrôler Astérix dans ses aventures à travers la Gaule occupée par les Romains. La version MO5 présente des graphismes colorés qui capturent l'esprit des bandes dessinées originales.

### 1815

<img src="./screenshot/1815.jpg" alt="1815" width="640"/>

**English**: A strategy game based on the Battle of Waterloo in 1815. Players can command either the French or Allied forces in this historical simulation. This game demonstrates the educational potential of the MO5, which was widely used in French schools.

**Français**: Un jeu de stratégie basé sur la bataille de Waterloo en 1815. Les joueurs peuvent commander soit les forces françaises, soit les forces alliées dans cette simulation historique. Ce jeu démontre le potentiel éducatif du MO5, qui était largement utilisé dans les écoles françaises.

---

## About these Screenshots / À propos de ces captures d'écran

**English**: These screenshots demonstrate the functionality of the MO5 FPGA implementation with the integrated SDDrive component. They showcase both the system's boot process and the ability to run classic MO5 games from SD card storage.

**Français**: Ces captures d'écran démontrent les fonctionnalités de l'implémentation MO5 sur FPGA avec le composant SDDrive intégré. Elles illustrent à la fois le processus de démarrage du système et la capacité à exécuter des jeux classiques du MO5 à partir du stockage sur carte SD.
